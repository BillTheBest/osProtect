____________________________________________________________________
tables missing from Incident creation:
opt
*done-> payload
*done-> reference
*done-> reference_system
*done-> signature_reference

_________________________________________________________________________________________________________
2012-12-12 - error FIXED by Charlie Savage based on my suggestion:
... error caused by gem "composite_primary_keys", "~> 5.0.0.rc1"
ActiveRecord::StatementInvalid in Events#index
Showing /Users/cleesmith/Sites/osProtect_ror320/app/views/events/index.html.erb where line #13 raised:
Mysql2::Error: Column 'sid' in field list is ambiguous: 
SELECT COUNT(*) FROM (SELECT DISTINCT sid,cid FROM `event` 
LEFT OUTER JOIN `sensor` ON `sensor`.`sid` = `event`.`sid` 
LEFT OUTER JOIN `signature` ON `signature`.`sig_id` = `event`.`signature` 
LEFT OUTER JOIN `iphdr` ON `iphdr`.`sid` = `event`.`sid` AND `iphdr`.`cid` = `event`.`cid` 
LEFT OUTER JOIN `tcphdr` ON `tcphdr`.`sid` = `event`.`sid` AND `tcphdr`.`cid` = `event`.`cid` 
LEFT OUTER JOIN `udphdr` ON `udphdr`.`sid` = `event`.`sid` AND `udphdr`.`cid` = `event`.`cid` 
WHERE `event`.`sid` = 2 AND (signature.sig_priority = '3')) subquery_for_count
... will_paginate is doing this query

... cls: github issue: 
Using rails 3.2.0 and composite_primary_keys 5.0.0.rc1 (and previous versions), I have the following:

```ruby
class Event < ActiveRecord::Base
  self.pluralize_table_names = false
  set_primary_keys [:sid, :cid]
  belongs_to :iphdr, foreign_key: [:sid, :cid], :dependent => :destroy
```

```ruby
class Iphdr < ActiveRecord::Base
  self.pluralize_table_names = false
  set_primary_keys [:sid, :cid]
  has_many :events, foreign_key: [:sid, :cid]
```
These queries

```ruby
@events = Event.includes(:iphdr).where("iphdr.ip_src = ?", 329777412).count
```
... or ...

```ruby
@events = Event.includes(:iphdr).where("iphdr.ip_src = ?", 329777412).size
```
cause the following error:

```
Mysql2::Error: Column 'sid' in field list is ambiguous: 
SELECT COUNT(*) FROM (SELECT DISTINCT sid,cid 
FROM `event` LEFT OUTER JOIN `iphdr` 
ON `iphdr`.`sid` = `event`.`sid` 
AND `iphdr`.`cid` = `event`.`cid` 
WHERE (iphdr.ip_src = 329777412)) subquery_for_count
```

As both tables have the same primary keys, I think the **SELECT DISTINCT sid,cid** 
should be **SELECT DISTINCT event.sid, event.cid**. After forking CPK I changed the 
following in **build_count_subquery** method in **lib/composite_primary_keys/relation/calculations.rb**:
... from:

```ruby
relation.select_values = ["DISTINCT #{column.to_s}"]
```
... to this:

```ruby
if column_name.is_a?(CompositePrimaryKeys::CompositeKeys)
  relation.select_values = ["DISTINCT #{column.to_s.split(',').collect {|col| @klass.unscoped.table.name + '.' + col.strip}.join(', ')}"]
else
  relation.select_values = ["DISTINCT #{column.to_s}"]
end
```
I am unsure if this is a proper fix, but it works for MySQL ... but maybe there is a better way to express the query.
Thanks for CPK.
_________________________________________________________________________________________________________

... sql which will group rows based on frequency within a time period using the event.timestamp column:
select sec_to_time(floor(time_to_sec(timestamp)/60)*60), count(*)
from event
where timestamp between '2011-10-25 00:00:00' and '2011-10-25 23:59:59'
group by sec_to_time(floor(time_to_sec(timestamp)/60)*60);
... this groups by minute (60) intervals

... verify counts with:
select timestamp from event
where timestamp between "2011-10-25 00:00:00" and "2011-10-25 23:59:59";

_________________________________________________________________________________________________________

Graph/Chart options:
- googlecharts ... easy/simple, does all of the work, and returns an image as png file to use in img tag

Tom recommendations:
1. http://cyberpython.github.com/AwesomeChartJS/
    ... uses js + html5 canvas ... easy/simple, but graphing is in browser, so there's no image to include in pdf

2. http://www.jfree.org/jfreechart/
    ... uses Java + JDK + JCommmon library ... way too complicated to install/maintain

3. http://amardaxini.github.com/
    ... pure Ruby, server-side generation and renders png/jpeg
    ... poor docs, so it's hard to know exactly how to draw a simple pie chart
    ... has too many brittle dependencies (like linux Gd ruby-gd(circa 2004)) - difficult to install and maintain

4. http://code.google.com/p/flot/
    ... uses js/jQuery + html5 canvas ... graphing is in browser, so there's no image to include in pdf

_________________________________________________________________________________________________________
memory via htop on appsudo.com:

... just: Snort, Barnyard2, MySQL, OsProtect: web(thin workers)+scheduler+workers

 VIRT   RES  SHR S CPU% MEM%  TIME+  Command
 390M  137M 4080 S  0.0  6.9 1:27.47 /usr/local/snort/bin/snort -g snort -u snort -c /usr/local/snort/etc/snort.conf -i eth0 -D
 114M 23952 6512 S  0.0  1.2 4:26.85 /usr/sbin/mysqld
  99M 87228 5248 S  0.0  4.2 3:06.76 ruby /home/cleesmith/apps/osprotect/releases/20120210-043244/vendor/bundle/ruby/1.9.1/bin/thin start -p 5001
76152 60680 5256 S  0.0  2.9 0:33.45 ruby /home/cleesmith/apps/osprotect/releases/20120210-043244/vendor/bundle/ruby/1.9.1/bin/thin start -p 5000
67080 51956 5076 S  0.0  2.5 0:33.45 resque-1.19.0: Waiting for *
67080 51956 5076 S  0.0  2.5 0:33.31 resque-1.19.0: Waiting for *
65892 47376 5036 S  0.0  2.3 0:44.93 ruby /home/cleesmith/apps/osprotect/releases/20120210-043244/vendor/bundle/ruby/1.9.1/bin/rake resque:scheduler
27020  1816  972 S  0.0  0.1 9:56.11 /usr/local/bin/redis-server /etc/redis/redis.conf
 9392  5624 1008 S  0.0  0.3 1:48.83 /usr/local/bin/barnyard2 -c /usr/local/snort/etc/barnyard2.conf -d /var/log/snort -f snort.u2 -D

VIRT = 868,472 = 850M
 RES = 389,288 = 400M

_________________________________________________________________________________________________________
PDF generation in the background:
... ~3,000 events takes 3 minutes and generates a 10MB pdf file
... ~1,000 events takes 30 seconds and generates a 2.5MB pdf file

online pdf creation:
http://pdfcrowd.com/pricing/
http://docraptor.com/plans
https://www.acrobat.com/createpdf/en/pricing.html

charts:
https://dbinsights.herokuapp.com/

_____________________________________________________________________________________________________________________
cls: why I don't use PDFKit and wkhtmltopdf:

Jul 15, 2010 ... see: http://aaronvb.com/articles/page/4
PDFKit and wkhtmltopdf without X Server, using qt
If your PDFKit and wkhtmltopdf is working on your development server, probably in OSX, but not working on 
your production server, which is probably running linux, it's because you're missing X Server.

There are a few ways around this, some emulate X Server, but that seems hacky. I read through the 
wkhtmltopdf docs and read that a patched qt framework will allow you to use wkhtmltopdf without using X Server.

Here's what I did on my Ubuntu Box to get this to work (note: the compile time for qt was almost 2 hours, 
and you'll also need to have git installed):

sudo apt-get build-dep libqt4-gui libqt4-network libqt4-webkit
sudo apt-get install openssl build-essential xorg git-core git-doc libssl-dev

mkdir ~/sources
cd ~/sources
git clone git://gitorious.org/+wkhtml2pdf/qt/wkhtmltopdf-qt.git wkhtmltopdf-qt
cd wkhtmltopdf-qt
./configure -nomake tools,examples,demos,docs,translations -opensource -prefix ../wkqt
make -j3
make install
cd ..

next install wkhtmltopdf:
git clone git://github.com/antialize/wkhtmltopdf.git wkhtmltopdf
cd wkhtmltopdf
../wkqt/bin/qmake
make -j3
make install

Run 'wkhtmltopdf' in shell and you should see it load correctly instead of seeing the x server error. 
Running 'wkhtmltopdf-proxy' should do the same, which is what PDFKit uses.

... is it worth all of this madness ?

_____________________________________________________________________________________________________________________

* * * * * before installing Ruby do the following (install the software build tools and libraries) * * * * *
_____________________________________________________________________________________________________________________

Ubuntu build tools and libraries needed for a Ruby install:
... use either: sudo aptitude (preferred) or sudo apt-get

sudo aptitude -y install 
autoconf
automake
bison
build-essential
curl
flex
git-core
libapr1-dev
libaprutil1-dev
libc6-dev
libcurl4-openssl-dev
libexpat1
libffi-dev
libpcap-ruby
libpcap0.8-dev
libpcre3-dev
libreadline6
libreadline6-dev
libssl-dev
libtool
libxml2
libxml2-dev
libxslt-dev
libxslt1-dev
libxslt1.1
libyaml-dev
ncurses-dev
openssl
ssl-cert
subversion
wget
zlib1g
zlib1g-dev

... as a one-liner:
sudo aptitude -y install autoconf automake bison build-essential curl flex git-core libapr1-dev libaprutil1-dev libc6-dev libcurl4-openssl-dev libexpat1 libffi-dev libpcap-ruby libpcap0.8-dev libpcre3-dev libreadline6 libreadline6-dev libssl-dev libtool libxml2 libxml2-dev libxslt-dev libxslt1-dev libxslt1.1 libyaml-dev ncurses-dev openssl ssl-cert subversion wget zlib1g zlib1g-dev
_____________________________________________________________________________________________________________________

If using MySQL (and the mysql2 gem):
sudo aptitude -y install
mysql 
mysql-server 
libmysqlclient16-dev
libmysqlclient16
_____________________________________________________________________________________________________________________

If using Apache and Passenger as the web/app server:
sudo aptitude -y install
apache2 
apache2-mpm-prefork 
apache2-prefork-dev
apache2-utils 
apache2.2-common 
_____________________________________________________________________________________________________________________

If using SQLite:
sudo aptitude -y install
libsqlite3-0
sqlite3
libsqlite3-dev
_____________________________________________________________________________________________________________________

If using PostgreSQL (and the pg gem):
sudo aptitude -y install
libpq-dev 
_____________________________________________________________________________________________________________________

... note that the url will be localhost:5000 (not 3000)
redis-server /usr/local/etc/redis.conf
cls; foreman start -c web=3,worker=3,scheduler=1
cls; foreman start -c web=1,worker=1,scheduler=1

cls; be foreman start -f Procfile_with_unicorn

... deploy via giddyup (heroku-like):
git push deploy master:master
gup   (osprotect.appsudo.com)
ssh cleesmith@appsudo.com
sshlinode

git push deployclone master:master
gclone   (38.123.140.62)
ssh cleesmith@38.123.140.62
sshclone

git push's:
gup, gclone, github
_____________________________________________________________________________________________________________________
* * * * * * * * * * * * only change needed for different deployments * * * * * * * * * * * * * * *

1. RAILS_ENV=production bundle exec rake assets:precompile
    ... only works if in config/database.yml production is the same as development ?
2. config/app_config.yml :
    production:
      host: osprotect.appsudo.com
      ... or ...
      host: 38.123.140.62
3. config/environments/production.rb :
    config.action_mailer.default_url_options = { :host => "osprotect.appsudo.com" }
    ... or ...
    config.action_mailer.default_url_options = { :host => "38.123.140.62" }
_____________________________________________________________________________________________________________________

Apache + Unicorn:
https://github.com/teambox/teambox/wiki/Installing-on-Ubuntu-using-Apache-and-Unicorn


cls: old wiki instructions with steps 13. and 14.
## Install this Rails application

1. log in as the **rails app user** (not **root**)
  * this is the user that the rails app will execute/run as
2. cd **/home/rails_app_user/apps** (mkdir apps, if needed)
3. **git clone git://github.com/clonesec/osProtect.git** ... this creates an osProtect folder
4. cd **osProtect**
5. edit **config/app_config.yml** ... change as appropriate for your installation ... [details here](wiki/app_config "app config settings")
6. it is required that a Snort database already be installed
  * another MySQL user should be created for this rails app to use when accessing the existing Snort database ... [details here](wiki/create-rails-app-user-for-snort-database "create rails app user in mysql")
  * this MySQL user name does not have to match the **rails app user**
7. edit **config/database.yml** ... change to match your installation of MySQL and the Snort database
8. **bundle install --deployment --without assets development test** ... to install **rails** and all of the gems in the **Gemfile**
9. **bundle exec rake assets:precompile** ... to compress and ready assets for use by web servers in **production** mode
10. **bundle exec rake db:migrate** ... which add tables in addition to the Snort schema (note: the Snort tables/data are not altered by this app)
11. **bundle exec rake db:seed** ... which creates the initial **admin** user, please edit this file to change the admin password/email
12. edit **config/resque.yml** ... change this file if you are not using the default IP/Port for **Redis**
13. to perform a quick test without using the web server (apache/nginx) do:
  * **nano ~/apps/osProtect/config/environments/production.rb** and change the following line from **false** to **true**:
  * **config.serve_static_assets = true**
  * save that change
  * **bundle exec rails server -e production**
  * then visit http://localhost:3000/ in a web browser
14. now try everything via the web server:
  * **nano ~/apps/osProtect/config/environments/production.rb** and change the following line back to **false**:
  * **config.serve_static_assets = false**
  * save that change, because web servers are much faster and more efficient at serving assets (images, javascripts, and stylesheets)
  * then visit http://osprotect.example.com/ (use your domain) in a web browser, and everything should be the same as in step **13.**


